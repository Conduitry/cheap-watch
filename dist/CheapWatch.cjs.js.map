{"version":3,"file":"CheapWatch.cjs.js","sources":["../src/CheapWatch.ts"],"sourcesContent":["import { EventEmitter } from 'events';\nimport * as fs from 'fs';\nimport { promisify } from 'util';\n\nconst readdir = promisify(fs.readdir);\nconst stat = promisify(fs.stat);\n\nexport default class CheapWatch extends EventEmitter {\n\t// root directory\n\tdir: string;\n\t// function to limit watching to certain directories/files\n\tfilter?: Filter;\n\t// whether to actually watch for changes, or just report all matching files and their stats\n\twatch = true;\n\t// number of milliseconds to use to debounce events from FSWatcher\n\tdebounce = 10;\n\t// paths of all files/dirs -> stats\n\tpaths = new Map<string, fs.Stats>();\n\n\t// paths of all directories -> FSWatcher instances\n\tprivate _watchers = new Map<string, fs.FSWatcher>();\n\t// paths of files/dirs with pending debounced events -> setTimeout timer ids\n\tprivate _timeouts = new Map<string, NodeJS.Timer>();\n\t// queue of paths of pending FSWatcher events to handle\n\tprivate _queue: string[] = [];\n\t// current status of instance\n\tprivate _status = Status.Created;\n\n\tconstructor(data: object /* = { dir, filter, watch, debounce } */) {\n\t\tsuper();\n\t\tObject.assign(this, data);\n\t\tif (typeof this.dir !== 'string') {\n\t\t\tthrow new TypeError('dir must be a string');\n\t\t}\n\t\tif (this.filter && typeof this.filter !== 'function') {\n\t\t\tthrow new TypeError('filter must be a function');\n\t\t}\n\t\tif (typeof this.watch !== 'boolean') {\n\t\t\tthrow new TypeError('watch must be a boolean');\n\t\t}\n\t\tif (typeof this.debounce !== 'number') {\n\t\t\tthrow new TypeError('debounce must be a number');\n\t\t}\n\t}\n\n\t// recurse directory, get stats, set up FSWatcher instances\n\tasync init(): Promise<void> {\n\t\tif (this._status !== Status.Created) {\n\t\t\tthrow new Error('cannot call init() twice');\n\t\t}\n\t\tthis._status = Status.Initing;\n\t\tawait this._recurse(this.dir);\n\t\tthis._status = Status.Ready;\n\t}\n\n\t// close all FSWatchers\n\tclose(): void {\n\t\tif (this._status === Status.Created || this._status === Status.Initing) {\n\t\t\tthrow new Error('cannot call close() before init() finishes');\n\t\t}\n\t\tif (this._status === Status.Closed) {\n\t\t\tthrow new Error('cannot call close() twice');\n\t\t}\n\t\tthis._status = Status.Closed;\n\t\tfor (const watcher of this._watchers.values()) {\n\t\t\twatcher.close();\n\t\t}\n\t}\n\n\t// recurse a given directory\n\tprivate async _recurse(full: string): Promise<void> {\n\t\tconst path = full.slice(this.dir.length + 1);\n\t\tconst stats = await stat(full);\n\t\tif (path) {\n\t\t\tif (this.filter && !(await this.filter({ path, stats }))) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.paths.set(path, stats);\n\t\t}\n\t\tif (stats.isDirectory()) {\n\t\t\tif (this.watch) {\n\t\t\t\tthis._watchers.set(\n\t\t\t\t\tpath,\n\t\t\t\t\tfs.watch(full, this._handle.bind(this, full)).on('error', () => {}),\n\t\t\t\t);\n\t\t\t}\n\t\t\tawait Promise.all(\n\t\t\t\t(await readdir(full)).map(sub => this._recurse(full + '/' + sub)),\n\t\t\t);\n\t\t}\n\t}\n\n\t// handle FSWatcher event for given directory\n\tprivate _handle(dir: string, event: string, file: string): void {\n\t\tthis._debounce(dir);\n\t\tthis._debounce(dir + '/' + file);\n\t}\n\n\t// debounce and enqueue event for given path\n\tprivate _debounce(path: string): void {\n\t\tif (this._timeouts.has(path)) {\n\t\t\tclearTimeout(this._timeouts.get(path));\n\t\t}\n\t\tthis._timeouts.set(\n\t\t\tpath,\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._timeouts.delete(path);\n\t\t\t\tthis._enqueue(path);\n\t\t\t}, this.debounce),\n\t\t);\n\t}\n\n\t// add an FSWatcher event to the queue, and handle queued events\n\tprivate async _enqueue(full: string): Promise<void> {\n\t\tthis._queue.push(full);\n\t\tif (this._status !== Status.Ready) {\n\t\t\treturn;\n\t\t}\n\t\tthis._status = Status.Processing;\n\t\twhile (this._queue.length) {\n\t\t\tconst full = this._queue.shift();\n\t\t\tconst path = full.slice(this.dir.length + 1);\n\t\t\tconst stats = await stat(full).catch(() => {});\n\t\t\tif (stats) {\n\t\t\t\tif (this.filter && !(await this.filter({ path, stats }))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst isNew = !this.paths.has(path);\n\t\t\t\tthis.paths.set(path, stats);\n\t\t\t\tif (path) {\n\t\t\t\t\tthis.emit('+', { path, stats, isNew });\n\t\t\t\t}\n\t\t\t\tif (stats.isDirectory() && !this._watchers.has(path)) {\n\t\t\t\t\t// note the new directory\n\t\t\t\t\t// start watching it, and report any files in it\n\t\t\t\t\tawait this._recurse(full);\n\t\t\t\t\tfor (const [new_path, stats] of this.paths.entries()) {\n\t\t\t\t\t\tif (new_path.startsWith(path + '/')) {\n\t\t\t\t\t\t\tthis.emit('+', { path: new_path, stats, isNew: true });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (this.paths.has(path)) {\n\t\t\t\t// note the deleted file/dir\n\t\t\t\tconst stats = this.paths.get(path);\n\t\t\t\tthis.paths.delete(path);\n\t\t\t\tthis.emit('-', { path, stats });\n\t\t\t\tif (this._watchers.has(path)) {\n\t\t\t\t\t// stop watching it, and report any files/dirs that were in it\n\t\t\t\t\tfor (const old_path of this._watchers.keys()) {\n\t\t\t\t\t\tif (old_path === path || old_path.startsWith(path + '/')) {\n\t\t\t\t\t\t\tthis._watchers.get(old_path).close();\n\t\t\t\t\t\t\tthis._watchers.delete(old_path);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const old_path of this.paths.keys()) {\n\t\t\t\t\t\tif (old_path.startsWith(path + '/')) {\n\t\t\t\t\t\t\tconst stats = this.paths.get(old_path);\n\t\t\t\t\t\t\tthis.paths.delete(old_path);\n\t\t\t\t\t\t\tthis.emit('-', { path: old_path, stats });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._status = Status.Ready;\n\t}\n}\n\ninterface Filter {\n\t(file: { path: string; stats: fs.Stats }): Promise<boolean>;\n}\n\nconst enum Status {\n\tCreated,\n\tIniting,\n\tReady,\n\tProcessing,\n\tClosed,\n}\n"],"names":["promisify","EventEmitter"],"mappings":"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"}